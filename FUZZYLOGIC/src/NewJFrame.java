/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PEACE
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        getEmosi = new javax.swing.JTextField();
        getPROVOKASI = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        Notification = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("FUZZY LOGIC ");

        jLabel2.setText("EMOSI");

        jLabel3.setText("PROVOKASI");

        getEmosi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getEmosiActionPerformed(evt);
            }
        });

        jButton1.setText("HASIL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(getPROVOKASI, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(149, 149, 149))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(161, 161, 161))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(57, 57, 57)
                        .addComponent(getEmosi, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Notification, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(getEmosi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(getPROVOKASI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(Notification, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //NilaiSugeono 
    double Rendah;
    double Tinggi;
    //Variabel untuk instansiasi class ;
    Emosi e;
    Provokasi p;
    //Vatiabel untuk penampung nilai inputan pada GUI 
    int NilaiEmosi,NilaiProvokasi;
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Rendah=0.0;
        Tinggi=0.0;
        e= new Emosi();
        p=new Provokasi();
        NilaiEmosi=Integer.parseInt(getEmosi.getText()); //Mengconvert dari Text ke Integer
        NilaiProvokasi =Integer.parseInt(getPROVOKASI.getText());
        e.setE(NilaiEmosi); //Men set nilai Pada Class Emosi berdasarkan inputan
        p.setP(NilaiProvokasi);
        
       
        try{
        System.out.println("TAHAP FUZZYFICATION");
        System.out.println("EMOSI");
        if (e.sangatrendah()!=0.0){
            System.out.println("sangatrendah : "+e.sangatrendah());
        };
        if (e.rendah()!=0.0){
            System.out.println("rendah : "+e.rendah());
        };
        if (e.sedang()!=0.0){
            System.out.println("sedang : "+e.sedang());
        };
        if (e.tinggi()!=0.0){
            System.out.println("tinggi : "+e.tinggi());
        };
      
        
        System.out.println("PROVOKASI");
        if (p.sangatrendah()!=0.0){
            System.out.println("sangatrendah : "+p.sangatrendah());
        };
        if (p.rendah()!=0.0){
            System.out.println("rendah : "+p.rendah());
        };
        if (p.sedang()!=0.0){
            System.out.println("sedang : "+p.sedang());
        };
        if (p.tinggi()!=0.0){
            System.out.println("tinggi : "+p.tinggi());
        };
        System.out.println(" ");
        
        System.out.println("Tahap Inference");
        if (e.sangatrendah()!=0.0){
            if (p.sangatrendah()!=0.0){
               System.out.println("sangatrendah("+e.sangatrendah()+") ^ sangatrendah("+p.sangatrendah()+") = rendah("+Min(e.sangatrendah(),p.sangatrendah())+")");              
               if (Min(e.sangatrendah(),p.sangatrendah())>Rendah){
                   Rendah=Min(e.sangatrendah(),p.sangatrendah());
               }
               
            }
            if (p.rendah()!=0.0){
               System.out.println("sangatrendah("+e.sangatrendah()+") ^ rendah("+p.rendah()+") = rendah("+Min(e.sangatrendah(),p.rendah())+")");              
               if (Min(e.sangatrendah(),p.rendah())>Rendah){
                   Rendah=Min(e.sangatrendah(),p.rendah());
               }             
            }
            if (p.sedang()!=0.0){
               System.out.println("sangatrendah("+e.sangatrendah()+") ^ sedang("+p.sedang()+") = rendah("+Min(e.sangatrendah(),p.sedang())+")");                         
               if (Min(e.sangatrendah(),p.sedang())>Rendah){
                   Rendah=Min(e.sangatrendah(),p.sedang());
               }    
            }
            if (p.tinggi()!=0.0){
               System.out.println("sangatrendah("+e.sangatrendah()+") ^ tinggi("+p.tinggi()+") = tinggi("+Min(e.sangatrendah(),p.tinggi())+")");              
               if (Min(e.sangatrendah(),p.tinggi())>Tinggi){
                   Tinggi=Min(e.sangatrendah(),p.tinggi());
               }    
            }
        }
        
        if (e.rendah()!=0.0){
            if (p.sangatrendah()!=0.0){
               System.out.println("rendah("+e.rendah()+") ^ sangatrendah("+p.sangatrendah()+") = rendah("+Min(e.rendah(),p.sangatrendah())+")");              
               if (Min(e.rendah(),p.sangatrendah())>Rendah){
                   Rendah=Min(e.rendah(),p.sangatrendah());
               }
                   
            }
            if (p.rendah()!=0.0){
               System.out.println("rendah("+e.rendah()+") ^ rendah("+p.rendah()+") = rendah( "+Min(e.rendah(),p.rendah())+")");              
               if (Min(e.rendah(),p.rendah())>Rendah){
                   Rendah=Min(e.rendah(),p.rendah());
               }
                   
            }
            if (p.sedang()!=0.0){
               System.out.println("rendah("+e.rendah()+") ^ sedang("+p.sedang()+") = Rendah("+Min(e.rendah(),p.sedang())+")");              
               if (Min(e.rendah(),p.sedang())>Rendah){
                   Rendah=Min(e.rendah(),p.sedang());
               }
                   
            }
            if (p.tinggi()!=0.0){
               System.out.println("rendah("+e.rendah()+") ^ tinggi("+p.tinggi()+") = tinggi ("+Min(e.rendah(),p.tinggi())+")");              
               if (Min(e.rendah(),p.tinggi())>Tinggi){
                   Tinggi=Min(e.rendah(),p.tinggi());
               }    
            }
        }
        
        if (e.sedang()!=0.0){
            if (p.sangatrendah()!=0.0){
               System.out.println("sedang("+e.sedang()+") ^ sangatrendah("+p.sangatrendah()+") = rendah( "+Min(e.sedang(),p.sangatrendah())+")");              
               if (Min(e.sedang(),p.sangatrendah())>Rendah){
                   Rendah=Min(e.sedang(),p.sangatrendah());
               }
                   
            }
            if (p.rendah()!=0.0){
               System.out.println("sedang ("+e.sedang()+") ^ rendah("+p.rendah()+") = rendah("+Min(e.sedang(),p.rendah())+")");              
              if (Min(e.sedang(),p.rendah())>Rendah){
                   Rendah=Min(e.sedang(),p.rendah());
               }
                   
            }
            if (p.sedang()!=0.0){
               System.out.println("sangatrendah("+e.sedang()+") ^ sedang("+p.sedang()+") =  rendah ("+Min(e.sedang(),p.sedang())+")");              
              if (Min(e.sedang(),p.sedang())>Rendah){
                   Rendah=Min(e.sedang(),p.sedang());
               } 
                  
            }
            if (p.tinggi()!=0.0){
               System.out.println("sangatrendah("+e.sedang()+") ^ tinggi("+p.tinggi()+") = tinggi("+Min(e.sedang(),p.tinggi())+")");              
               if (Min(e.sedang(),p.tinggi())>Tinggi){
                   Tinggi=Min(e.sedang(),p.tinggi());
               }
                  
            }
        }
        
        if (e.tinggi()!=0.0){
            if (p.sangatrendah()!=0.0){
               System.out.println("tinggi("+e.tinggi()+") ^ sangatrendah("+p.sangatrendah()+") = rendah("+Min(e.tinggi(),p.sangatrendah())+")");              
               if (Min(e.tinggi(),p.sangatrendah())>Rendah){
                   Rendah=Min(e.tinggi(),p.sangatrendah());
               }
                  
            }
            if (p.rendah()!=0.0){
               System.out.println("tinggi ("+e.tinggi()+") ^ rendah("+p.rendah()+") = tinggi("+Min(e.tinggi(),p.rendah())+")");              
               if (Min(e.tinggi(),p.rendah())>Tinggi){
                  Tinggi=Min(e.tinggi(),p.rendah());
               }
                   
            }
            if (p.sedang()!=0.0){
               System.out.println("tinggi("+e.tinggi()+") ^ sangatrendah("+p.sedang()+") = tinggi("+Min(e.tinggi(),p.sedang())+")");              
               if (Min(e.tinggi(),p.sedang())>Tinggi){
                   Tinggi=Min(e.tinggi(),p.sedang());
               }
                   
            }
            if (p.tinggi()!=0.0){
               System.out.println("tinggi("+e.tinggi()+") ^ tinggi("+p.tinggi()+") = tinggi("+Min(e.tinggi(),p.tinggi())+")");              
              if (Min(e.tinggi(),p.tinggi())>Tinggi){
                   Tinggi=Min(e.tinggi(),p.tinggi());
               }
                 
            }
        }
        
        System.out.println("");
        System.out.println("TAHAP DEFUZZYFICATION");
        double Hasil=0.0;
        //METODE SUGEONO
        System.out.println("Nilai Rendah :"+ Rendah);
        System.out.println("Nilai Tinggi :"+ Tinggi);
        Hasil =   (((0.3*Rendah)+(0.7*Tinggi))/(Rendah+Tinggi));
        System.out.println(String.format("HASIL : %.2f",Hasil*100)); 
        System.out.println("================");
        System.out.println("");
        if ((Hasil*100)<=30){
            Notification.setText("Tidak Hoax");
        }
        else if ((Hasil*100)>30){
            Notification.setText("Hoax");
        } 
            
        }
        catch (Exception e ) {
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void getEmosiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getEmosiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getEmosiActionPerformed
    
    public double Min(double a,double b){ //mencari nilai minimum pada saat tahap inference
        double  NilaiTerkecil;
        if (a<b){
           return a;
        }
        else {
            return b;
        }    
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Notification;
    private javax.swing.JTextField getEmosi;
    private javax.swing.JTextField getPROVOKASI;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
